import {
  Check,
  Column,
  CreateDateColumn,
  Entity,
  PrimaryGeneratedColumn,
  Unique,
  UpdateDateColumn,
} from 'typeorm';
import { StateEnum } from '../enums/state.enum';

@Entity()
export class Post {
  // automatically generated by database
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column({ nullable: false, length: 100, type: 'varchar' })
  @Check('TitleLengthCheck', `LENGTH(title) BETWEEN 3 AND 100`)
  @Unique('UniquePostTitleConstraint', ['title'])
  title: string;

  @Column({ nullable: false, type: 'varchar' })
  @Check('ContentLengthCheck', `LENGTH(content) >= 3`)
  content: string;

  @Column({ type: 'enum', enum: StateEnum, default: StateEnum.DRAFT })
  state: StateEnum;

  @Column({ nullable: false })
  hash: string;

  // typeorm will set created_at and updated_at automatically
  @CreateDateColumn()
  created_at: Date;

  @UpdateDateColumn()
  updated_at: Date;

  constructor(data: Partial<Post>) {
    Object.assign(this, data);
  }
}
